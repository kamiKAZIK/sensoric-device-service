plugins {
	id 'java'
	id 'org.springframework.boot' version '2.0.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.6.RELEASE'
	id 'com.palantir.docker' version '0.20.1'
}

allprojects {
	group 'com.sensoric'
	version '1.0-SNAPSHOT'

	sourceCompatibility = 1.8

	repositories {
		jcenter()
	}
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE'
	}
}

sourceSets {
	generated {
		java {
			srcDir 'src/generated/java'
		}
	}
}

compileJava {
	File generatedSourceDir = project.file('src/generated/java')
	println "Creating and configuring generated source directory $generatedSourceDir"
	project.mkdir(generatedSourceDir)
	options.annotationProcessorGeneratedSourcesDirectory = generatedSourceDir
	outputs.dir(generatedSourceDir)
}

dependencies {
	compile 'org.springframework.cloud:spring-cloud-config-client'

	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'

	runtime 'org.postgresql:postgresql:42.2.5'
}

dependencies {
	compile 'com.querydsl:querydsl-jpa:4.1.4'

	compileOnly 'org.projectlombok:lombok:1.18.4'

	annotationProcessor 'com.querydsl:querydsl-apt:4.1.4:jpa',
			'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final',
			'org.projectlombok:lombok:1.18.4'
}

bootJar {
	launchScript {
		properties 'logFilename': "${jar.baseName}.log"
	}
}

springBoot {
	buildInfo()
}

docker {
	name "${project.group}/${jar.baseName}"
	files jar.archivePath, 'docker-entrypoint.sh'
	buildArgs(['JAR_FILE': "${jar.archiveName}"])
}
